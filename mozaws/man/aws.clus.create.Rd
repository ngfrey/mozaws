% Generated by roxygen2 (4.0.2): do not edit by hand
\name{aws.clus.create}
\alias{aws.clus.create}
\title{Create a cluster}
\usage{
aws.clus.create(name = NULL, workers = NULL, master = NULL,
  hadoopops = NULL, timeout = NULL, verbose = FALSE, emrfs = FALSE,
  customscript = NULL, wait = FALSE)
}
\arguments{
\item{name}{is the name of the cluster, if not provided one will be created for you}

\item{workers}{defines the workers, see details}

\item{master}{defines master , see details}

\item{hadoopops}{options that overide 'hadoopops' from options("mzaws")[[1]]}

\item{timeout}{over timeout from the options}

\item{verbose}{be catty?}

\item{emrfs}{turns on emrfs and consistency}

\item{customscript}{override options}

\item{wait}{TRUE or FALSE for waiting. If FALSE, the function returns immediately or waits}
}
\description{
Create a cluster
}
\details{
The arguments \code{hadoopops, timeout, customscript} can
also be set in options. If \code{wait} is FALSE, the function will
return immediately and can be monitored using
\code{aws.clus.wait}. If \code{workers} is a number, then the type
is taken from options("mzaws")[[1]]. If a string, this corresponds
to the instance type and the number is taken from
options("mzaws")[[1]]$numworkers. If a list, it needs to of the
form \code{list(number, type)}. For \code{master}, it is enough to
leave as NULL (and will be inferred from options) or you pass a
type. The \code{timeout} is a set number of hours after which the
cluster is killed. You'll thank me later.
}
\examples{
\dontrun{
s <- aws.clus.create(workers=1,wait=TRUE,customscript='https://raw.githubusercontent.com/saptarshiguha/mozaws/master/bootscriptsAndR/sample.sh')
s <- aws.clus.create(workers=1)
s <- aws.clus.wait(s)
}
}

